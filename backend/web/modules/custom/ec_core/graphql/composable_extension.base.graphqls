type Mutation

scalar Violation
scalar Date
scalar Array

type User {
  id: Int!
  name: String!
  email: String
  fullName: String
  phone: String
  primary: String
  contact: Boolean
  categories: Array
  experiences: Array
  note: String
  verified: Boolean
}

type Event {
  id: Int!
  title: String!
  body: String
  start: Date
  end: Date
  categories: Array
  volunteers: Array
}

type EventConnection {
  total: Int!
  items: [Event!]
}

type EventResponse implements Response {
  errors: [Violation]
  event: Event
}

interface Response {
  errors: [Violation]
}

input EventInput {
  id: Int!
  categories: Array
  hours: Float
  note: String
  remove: Boolean
}

type UserResponse implements Response {
  errors: [Violation]
  user: User
}

input UserInput {
  name: String
  email: String
  pass: String
  currPass: String
  fullName: String
  phone: String
  primary: String
  contact: Boolean
  categories: Array
  experiences: Array
  note: String
  needs_verification: Boolean
}

type Taxonomy {
  id: Int!
  name: String
}

type TaxonomyConnection {
  total: Int!
  items: [Taxonomy!]
}
